name: Frontmothership app deploy
on:
  push:
    branches:
    - features
    - release/*
    
    paths-ignore:
    - '**/*.md'
    - '**/*.gitignore'
    - '**/*.gitattributes'
    - '**/.next'
    - 'node'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'frontgate tags'
        required: false
        type: boolean
      environment:
        description: 'Environment '
        type: environment
        required: true
 
env:
  AZURE_WEBAPP_NAME: app-mothership
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  CONFIGURATION: Release
  NODE_CORE_VERSION: '20.x'
  PROJECT_PATH: /
  NODE_CLI_TELEMETRY_OPTOUT: 1
  NODE_SKIP_FIRST_TIME_EXPERIENCE: 1
  NODE_NOLOGO: true
  NODE_GENERATE_CERTIFICATE: false
  NODE_ADD_GLOBAL_TOOLS_TO_PATH: false
  NODE_MULTILEVEL_LOOKUP: 0
  SNYK_TOKEN: 'da364a31-6b96-412a-b516-c4d2bf4bc8fe'

permissions:
  contents: read
  statuses: read
  packages: write
  security-events: write
  
jobs:
  build:
    name: Build,Test && Snykscan
    #if: github.event_name == 'push' && contains((github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      statuses: read
      security-events: write
    steps:
    - uses: actions/checkout@v2
    - name:  Setup Node.js  ${{ env.NODE_CORE_VERSION }}
      uses: actions/setup-NODE@v1
      with:
        node-version: ${{ env.NODE_CORE_VERSION }}
        cache: "npm"
        cache-dependency-path: package-lock.json

    - name: npm install, build and test
      run: |
        npm config set fund false --location=global
        npm install
        npm i sharp
        npm audit fix
        npm run build  
        npm run test --if-present
      working-directory: ${{ env.PROJECT_PATH }}
    
    - name: Run Snyk to check for vulnerabilities
      uses: actions/checkout@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
     
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  testing:
    needs: build
    name: Deploy to testing environment
    environment:
      name: testing
      url: ${{ steps.deploy_testing.outputs.webapp-url }}
    runs-on: ubuntu-latest
    steps:
          # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp
    - name: Run Snyk to check for vulnerabilities
      uses: actions/checkout@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  staging:
    needs: testing
    name: Deploy to staging environment
    environment:
        name: staging
        url: ${{ steps.deploy_staging.outputs.webapp-url }}
    runs-on: ubuntu-latest
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp

    # Deploy to App Service Linux
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      id: deploy_staging
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        slot-name: staging
      
    - name: Run Snyk to check for vulnerabilities
      uses: actions/checkout@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
  deploy:
    needs: staging
    permissions:
      contents: none
    environment:
      name: production
      url: ${{ steps.deploy_production.outputs.webapp-url }}
  
    
    name: Deploy to production
    runs-on: ubuntu-latest
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp

    # Deploy to App Service Linux
    - name: Deploy to Azure WebApp
      id: deploy_production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
