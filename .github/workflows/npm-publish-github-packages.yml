name: Frontmothership app deploy
on:
  push:
    branches:
    - main
    - release/*
    paths-ignore:
    - '**/*.md'
    - '**/*.gitignore'
    - '**/*.gitattributes'
    - '**/.next'
    - 'node'
env:
  AZURE_WEBAPP_NAME: kgf-webb
  AZURE_WEBAPP_PACKAGE_PATH: ./published
  CONFIGURATION: Release
  NODE_CORE_VERSION: 14.x
  PROJECT_PATH: src/app
  NODE_CLI_TELEMETRY_OPTOUT: 1
  NODE_SKIP_FIRST_TIME_EXPERIENCE: 1
  NODE_NOLOGO: true
  NODE_GENERATE_CERTIFICATE: false
  NODE_ADD_GLOBAL_TOOLS_TO_PATH: false
  NODE_MULTILEVEL_LOOKUP: 0
  secrets.SNYK_TOKEN: 'test'
  
jobs:
  build:
    name: Build
    if: github.event_name == 'push' && contains((github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name:  Setup Node.js  ${{ env.NODE_CORE_VERSION }}
      uses: actions/setup-NODE@v1
      with:
        NODE-version: ${{ env.NODE_CORE_VERSION }}
    - name: npm install, build and test
      run: |
        npm config set fund false --location=global
        npm install
        npm i sharp
        npm audit fix
        npm run build  
     # working-directory: "${{ env.PROJECT_PATH }}"
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}   
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
          command: monitor
    
    - name: Copy project files
      run: |
        mkdir -p ${{ github.workspace }}/artifact
        cp -R src/* ${{ github.workspace }}/artifact/
        cp -R public/* ${{ github.workspace }}/artifact/
      shell: bash
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ github.workspace }}/artifact
    
    
  staging:
    needs: build
    name: Deploy to staging
    environment:
        name: staging
        url: ${{ steps.deploy_staging.outputs.webapp-url }}
    runs-on: ubuntu-latest
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp

    # Deploy to App Service Linux
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      id: deploy_staging
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        slot-name: staging

  deploy:
    needs: staging
    environment:
      name: production
      url: ${{ steps.deploy_production.outputs.webapp-url }}
    name: Deploy to production
    runs-on: ubuntu-latest
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp

    # Deploy to App Service Linux
    - name: Deploy to Azure WebApp
      id: deploy_production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
