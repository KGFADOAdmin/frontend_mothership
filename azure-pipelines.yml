# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'


variables:
  buildConfiguration: 'Dev'
  releaseBranchName: 'dev'
  
 
  dotnetSdkVersion: '6.x'


stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm 
      
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'
    - task: Npm@1
      displayName: 'Install Dependencies'
      inputs:
       command: 'install'
    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt' 
      displayName: 'Write build info'
      #workingDirectory: $(wwwrootDir)
      

    - task: VSTest@1
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration'
        codeCoverageEnabled: true
    - task: PublishBuildArtifacts@1
      inputs:
       PathtoPublish: '$(Build.ArtifactStage)'
       ArtifactName: 'drop'
       publishLocation: FilePath 
       MaxArtifactSize: 0

    - task: DotNetCoreCLI@2
      inputs:
       command: 'test'
       projects: '**/*.csproj'
       arguments: 'output folder'
       testRunTitle: 'app test result'
       workingDirectory: '$(System.DefaultWorkingDirectory)'
   
    - task: ArchiveFiles@2
      inputs:
       rootFolderOrFile: '$(Build.BinariesDirectory)'
       includeRootFolder: true
       archiveType: 'zip'
       archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
       replaceExistingArchive: true