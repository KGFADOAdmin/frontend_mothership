# Trigger pipeline on any branch push
trigger:
  branches:
    include:
      - '*'
pr:
  branches:
    include:
      - develop
variables: 
  dotnetSdkVersion: '6.x'
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  
 # Build Stage
stages:
  - stage: 'Build'
    displayName: 'Build Stage'
    jobs: 
    - job: 'build'
      displayName: 'Build job'
      pool:
       vmImage: 'ubuntu-20.04'
      steps:
      - task: NodeTool@0
        inputs:
         versionSpec: '14.x'  # Node version
        displayName: 'Install Node.js'
      - script: npm install
        displayName: 'Install Dependencies'

      - script: npm build
        displayName: 'Build Application'
      - script: npm test
        displayName: 'Run Unit Tests'

  
    - job: SecurityScan
      displayName: Securityscan
      dependsOn: Build
      condition: succeeded()
      pool:
        vmImage: ubuntu-latest
        steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK $(dotnetSdkVersion)'
          inputs:
           version: '$(dotnetSdkVersion)'
        - job: Test
        dependsOn: SecurityScan  # Run tests after build completes
        condition: succeeded()  # Only run tests if build succeeds
        pool:
         vmImage: ubuntu-latest

  # Test Stage
  - stage: Test
    displayName: 'Unit Test Stage'
    dependsOn: Build
    jobs:
      - job: UnitTests
        displayName: 'Run Unit Tests'
        steps:
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/test-results.xml'
          displayName: 'Publish Test Results'
        

        

          

  # Packaging Stage
  - stage: Package
    displayName: 'Packaging Stage'
    dependsOn: Test
    jobs:
      - job: Package
        displayName: 'Package Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: CopyFiles@2
            inputs:
              contents: '**/bin/Release/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy build artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: Container
             
            displayName: 'Publish artifacts'

