# Trigger pipeline on any branch push
trigger:
  branches:
    include:
      - '*'
variables: 
  dotnetSdkVersion: '6.x'
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  
# Define pipeline
stages:
  
  - stage: 'InstallDependecies'
    displayName: 'Build the web application'
    jobs: 
    - job: 'Build'
      displayName: 'Build job'
      pool:
       vmImage: 'ubuntu-20.04'
       demands:
       - npm 
  

  # Build Stage
  - stage: 'Build'
    displayName: 'Build Stage'
    jobs:
      - job: Compile
        displayName: 'Compile Job'
        pool:
          vmImage: 'ubuntu-latest'
          demands:
          - npm 

        steps:
        - task: UseDotNet@2
          displayName: 'Use .NET SDK $(dotnetSdkVersion)'
          inputs:
           version: '$(dotnetSdkVersion)'
        - task: Npm@1
          displayName: 'Install Dependencies'
          inputs:
           command: 'install'
        - task: Npm@1
          displayName: 'Run npm install'
          inputs:
           verbose: false
        - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt' 
          displayName: 'Write build info'
          workingDirectory: $(System.DefaultWorkingDirectory)
        - task: UseDotNet@2
          inputs: 
           version: '6.x' #Specigy .NET Version
           packageType: sdk
        
        - script: dotnet restore
          displayName: 'Dependencies restore'
          
        - script: dotnet build --configuration Release --no-restore
          displayName: 'Build Solution'
  
  # Test Stage
  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: UnitTests
        displayName: 'Run Unit Tests'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: dotnet test --no-build --verbosity normal
            displayName: 'Run unit tests'

  # Packaging Stage
  - stage: Package
    displayName: 'Packaging Stage'
    dependsOn: Test
    jobs:
      - job: Package
        displayName: 'Package Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: CopyFiles@2
            inputs:
              contents: '**/bin/Release/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy build artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
            displayName: 'Publish artifacts'
